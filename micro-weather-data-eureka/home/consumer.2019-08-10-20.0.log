2019-08-10 20:12:25.687 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1466cfa2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-10 20:12:26.937 [main] INFO  com.example.gradleDemo.Application - The following profiles are active: eureka
2019-08-10 20:12:27.234 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-08-10 20:12:27.234 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-08-10 20:12:27.250 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16ms. Found 0 repository interfaces.
2019-08-10 20:12:27.375 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=d9b5ddbb-ebae-3213-87fc-aabdff945a69
2019-08-10 20:12:27.406 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1466cfa2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-10 20:12:27.546 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8884 (http)
2019-08-10 20:12:27.546 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8884"]
2019-08-10 20:12:27.562 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-08-10 20:12:27.562 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.21]
2019-08-10 20:12:27.640 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-08-10 20:12:27.640 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 687 ms
2019-08-10 20:12:27.874 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2019-08-10 20:12:27.874 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-10 20:12:27.890 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2019-08-10 20:12:27.890 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-10 20:12:27.999 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2019-08-10 20:12:29.359 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2019-08-10 20:12:30.515 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2019-08-10 20:12:30.577 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2019-08-10 20:12:30.608 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2019-08-10 20:12:30.686 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2019-08-10 20:12:30.686 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2019-08-10 20:12:30.749 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2019-08-10 20:12:30.749 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2019-08-10 20:12:30.858 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2019-08-10 20:12:30.967 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2019-08-10 20:12:30.967 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2019-08-10 20:12:30.967 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2019-08-10 20:12:30.967 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2019-08-10 20:12:30.967 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2019-08-10 20:12:30.967 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2019-08-10 20:12:30.967 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2019-08-10 20:12:31.061 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2019-08-10 20:12:31.061 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2019-08-10 20:12:31.061 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-08-10 20:12:31.061 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1565439151061 with initial instances count: 4
2019-08-10 20:12:31.061 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application MICRO-WEATHER-DATA-EUREKA with eureka with status UP
2019-08-10 20:12:31.061 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1565439151061, current=UP, previous=STARTING]
2019-08-10 20:12:31.061 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MICRO-WEATHER-DATA-EUREKA/localhost:micro-weather-data-eureka:8884: registering service...
2019-08-10 20:12:31.077 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8884"]
2019-08-10 20:12:31.092 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8884 (http) with context path ''
2019-08-10 20:12:31.092 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8884
2019-08-10 20:12:31.092 [main] INFO  com.example.gradleDemo.Application - Started Application in 7.045 seconds (JVM running for 7.578)
2019-08-10 20:12:31.108 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MICRO-WEATHER-DATA-EUREKA/localhost:micro-weather-data-eureka:8884 - registration status: 204
2019-08-10 20:12:44.335 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$edb4d812] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-10 20:12:45.569 [main] INFO  com.example.gradleDemo.Application - The following profiles are active: eureka
2019-08-10 20:12:45.834 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-08-10 20:12:45.834 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-08-10 20:12:45.850 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 0ms. Found 0 repository interfaces.
2019-08-10 20:12:45.975 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=d9b5ddbb-ebae-3213-87fc-aabdff945a69
2019-08-10 20:12:46.022 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$edb4d812] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-10 20:12:46.147 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8885 (http)
2019-08-10 20:12:46.162 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8885"]
2019-08-10 20:12:46.162 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-08-10 20:12:46.162 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.21]
2019-08-10 20:12:46.256 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-08-10 20:12:46.256 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 672 ms
2019-08-10 20:12:46.459 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2019-08-10 20:12:46.459 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-10 20:12:46.459 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2019-08-10 20:12:46.459 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-10 20:12:46.569 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2019-08-10 20:12:47.944 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2019-08-10 20:12:49.100 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2019-08-10 20:12:49.177 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2019-08-10 20:12:49.193 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2019-08-10 20:12:49.271 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2019-08-10 20:12:49.271 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2019-08-10 20:12:49.334 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2019-08-10 20:12:49.334 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2019-08-10 20:12:49.443 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2019-08-10 20:12:49.552 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2019-08-10 20:12:49.552 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2019-08-10 20:12:49.552 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2019-08-10 20:12:49.552 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2019-08-10 20:12:49.552 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2019-08-10 20:12:49.552 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2019-08-10 20:12:49.552 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2019-08-10 20:12:49.646 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2019-08-10 20:12:49.646 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2019-08-10 20:12:49.646 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-08-10 20:12:49.646 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1565439169646 with initial instances count: 4
2019-08-10 20:12:49.646 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application MICRO-WEATHER-DATA-EUREKA with eureka with status UP
2019-08-10 20:12:49.646 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1565439169646, current=UP, previous=STARTING]
2019-08-10 20:12:49.646 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MICRO-WEATHER-DATA-EUREKA/localhost:micro-weather-data-eureka:8885: registering service...
2019-08-10 20:12:49.662 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8885"]
2019-08-10 20:12:49.677 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8885 (http) with context path ''
2019-08-10 20:12:49.677 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8885
2019-08-10 20:12:49.677 [main] INFO  com.example.gradleDemo.Application - Started Application in 7.014 seconds (JVM running for 7.596)
2019-08-10 20:12:49.693 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MICRO-WEATHER-DATA-EUREKA/localhost:micro-weather-data-eureka:8885 - registration status: 204
2019-08-10 20:17:30.972 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2019-08-10 20:17:49.566 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2019-08-10 20:19:54.255 [http-nio-8885-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-08-10 20:19:54.255 [http-nio-8885-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-08-10 20:19:54.259 [http-nio-8885-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2019-08-10 20:19:54.336 [http-nio-8885-exec-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2019-08-10 20:19:54.337 [http-nio-8885-exec-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2019-08-10 20:19:54.607 [http-nio-8885-exec-1] INFO  c.e.gradleDemo.service.impl.WeatherDataServiceImpl - Redis has data
2019-08-10 20:19:59.506 [http-nio-8884-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-08-10 20:19:59.507 [http-nio-8884-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-08-10 20:19:59.511 [http-nio-8884-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2019-08-10 20:19:59.586 [http-nio-8884-exec-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2019-08-10 20:19:59.587 [http-nio-8884-exec-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2019-08-10 20:19:59.851 [http-nio-8884-exec-1] INFO  c.e.gradleDemo.service.impl.WeatherDataServiceImpl - Redis has data
2019-08-10 20:20:17.663 [http-nio-8885-exec-4] INFO  c.e.gradleDemo.service.impl.WeatherDataServiceImpl - Redis has data
2019-08-10 20:20:21.212 [http-nio-8884-exec-4] INFO  c.e.gradleDemo.service.impl.WeatherDataServiceImpl - Redis has data
2019-08-10 20:20:32.349 [http-nio-8885-exec-7] INFO  c.e.gradleDemo.service.impl.WeatherDataServiceImpl - Redis has data
2019-08-10 20:20:37.259 [http-nio-8884-exec-7] INFO  c.e.gradleDemo.service.impl.WeatherDataServiceImpl - Redis has data
2019-08-10 20:20:40.958 [http-nio-8885-exec-10] INFO  c.e.gradleDemo.service.impl.WeatherDataServiceImpl - Redis has data
2019-08-10 20:20:44.493 [http-nio-8884-exec-2] INFO  c.e.gradleDemo.service.impl.WeatherDataServiceImpl - Redis has data
2019-08-10 20:20:49.361 [http-nio-8885-exec-5] INFO  c.e.gradleDemo.service.impl.WeatherDataServiceImpl - Redis has data
2019-08-10 20:20:52.018 [http-nio-8884-exec-5] INFO  c.e.gradleDemo.service.impl.WeatherDataServiceImpl - Redis has data
2019-08-10 20:21:08.994 [http-nio-8884-exec-6] INFO  c.e.gradleDemo.service.impl.WeatherDataServiceImpl - Redis has data
2019-08-10 20:21:12.552 [http-nio-8885-exec-6] INFO  c.e.gradleDemo.service.impl.WeatherDataServiceImpl - Redis has data
2019-08-10 20:21:32.885 [http-nio-8884-exec-3] INFO  c.e.gradleDemo.service.impl.WeatherDataServiceImpl - Redis has data
2019-08-10 20:21:52.438 [http-nio-8885-exec-8] INFO  c.e.gradleDemo.service.impl.WeatherDataServiceImpl - Redis has data
2019-08-10 20:21:55.976 [http-nio-8884-exec-8] INFO  c.e.gradleDemo.service.impl.WeatherDataServiceImpl - Redis has data
2019-08-10 20:22:04.030 [http-nio-8885-exec-3] INFO  c.e.gradleDemo.service.impl.WeatherDataServiceImpl - Redis has data
2019-08-10 20:22:13.593 [http-nio-8884-exec-9] INFO  c.e.gradleDemo.service.impl.WeatherDataServiceImpl - Redis has data
2019-08-10 20:22:19.990 [http-nio-8885-exec-9] INFO  c.e.gradleDemo.service.impl.WeatherDataServiceImpl - Redis don't has data
2019-08-10 20:22:19.996 [http-nio-8885-exec-9] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Don't has data!] with root cause
java.lang.RuntimeException: Don't has data!
	at com.example.gradleDemo.service.impl.WeatherDataServiceImpl.doGetWeahter(WeatherDataServiceImpl.java:47)
	at com.example.gradleDemo.service.impl.WeatherDataServiceImpl.getDataByCityId(WeatherDataServiceImpl.java:25)
	at com.example.gradleDemo.controller.WeatherController.getWeatherByCityId(WeatherController.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-08-10 20:22:30.978 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2019-08-10 20:22:49.583 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2019-08-10 20:22:59.147 [http-nio-8884-exec-10] INFO  c.e.gradleDemo.service.impl.WeatherDataServiceImpl - Redis has data
2019-08-10 20:27:30.987 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2019-08-10 20:27:49.592 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2019-08-10 20:32:31.000 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2019-08-10 20:32:49.605 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2019-08-10 20:37:31.001 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2019-08-10 20:37:49.621 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
