2019-08-09 21:32:09.618 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a669d3a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-09 21:32:10.961 [main] INFO  com.example.gradleDemo.Application - The following profiles are active: feign
2019-08-09 21:32:11.320 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=2380844e-2825-3a92-a1d0-e9e0842dfa65
2019-08-09 21:32:11.320 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.example.gradleDemo.service.CityClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-09 21:32:11.367 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a669d3a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-09 21:32:11.492 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8884 (http)
2019-08-09 21:32:11.508 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8884"]
2019-08-09 21:32:11.508 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-08-09 21:32:11.508 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.21]
2019-08-09 21:32:11.602 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-08-09 21:32:11.602 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 625 ms
2019-08-09 21:32:11.758 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2019-08-09 21:32:11.758 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-09 21:32:11.758 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2019-08-09 21:32:11.758 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-09 21:32:11.836 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2019-08-09 21:32:13.242 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2019-08-09 21:32:14.461 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2019-08-09 21:32:14.538 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2019-08-09 21:32:14.554 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2019-08-09 21:32:14.648 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2019-08-09 21:32:14.648 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2019-08-09 21:32:14.710 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2019-08-09 21:32:14.710 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2019-08-09 21:32:14.820 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2019-08-09 21:32:14.944 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2019-08-09 21:32:14.944 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2019-08-09 21:32:14.944 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2019-08-09 21:32:14.944 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2019-08-09 21:32:14.944 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2019-08-09 21:32:14.944 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2019-08-09 21:32:14.944 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2019-08-09 21:32:15.054 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2019-08-09 21:32:15.054 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2019-08-09 21:32:15.054 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-08-09 21:32:15.054 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1565357535054 with initial instances count: 1
2019-08-09 21:32:15.054 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application MICRO-WEATHER-CITY-EUREKA with eureka with status UP
2019-08-09 21:32:15.054 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1565357535054, current=UP, previous=STARTING]
2019-08-09 21:32:15.054 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MICRO-WEATHER-CITY-EUREKA/localhost:micro-weather-city-eureka:8884: registering service...
2019-08-09 21:32:15.069 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8884"]
2019-08-09 21:32:15.085 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8884 (http) with context path ''
2019-08-09 21:32:15.085 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8884
2019-08-09 21:32:15.085 [main] INFO  com.example.gradleDemo.Application - Started Application in 7.311 seconds (JVM running for 8.384)
2019-08-09 21:32:15.101 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MICRO-WEATHER-CITY-EUREKA/localhost:micro-weather-city-eureka:8884 - registration status: 204
2019-08-09 21:35:16.313 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4297b092] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-09 21:35:17.641 [main] INFO  com.example.gradleDemo.Application - The following profiles are active: feign
2019-08-09 21:35:17.969 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=2380844e-2825-3a92-a1d0-e9e0842dfa65
2019-08-09 21:35:17.985 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.example.gradleDemo.service.CityClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-09 21:35:18.016 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4297b092] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-09 21:35:18.141 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8884 (http)
2019-08-09 21:35:18.157 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8884"]
2019-08-09 21:35:18.157 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-08-09 21:35:18.157 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.21]
2019-08-09 21:35:18.250 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-08-09 21:35:18.250 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 609 ms
2019-08-09 21:35:18.391 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2019-08-09 21:35:18.407 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-09 21:35:18.407 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2019-08-09 21:35:18.407 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-09 21:35:18.485 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2019-08-09 21:35:19.860 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2019-08-09 21:35:21.063 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2019-08-09 21:35:21.125 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2019-08-09 21:35:21.156 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2019-08-09 21:35:21.234 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2019-08-09 21:35:21.234 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2019-08-09 21:35:21.296 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2019-08-09 21:35:21.296 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2019-08-09 21:35:21.406 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2019-08-09 21:35:21.531 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2019-08-09 21:35:21.531 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2019-08-09 21:35:21.531 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2019-08-09 21:35:21.531 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2019-08-09 21:35:21.531 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2019-08-09 21:35:21.531 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2019-08-09 21:35:21.531 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2019-08-09 21:35:21.640 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2019-08-09 21:35:21.640 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2019-08-09 21:35:21.640 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-08-09 21:35:21.640 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1565357721640 with initial instances count: 1
2019-08-09 21:35:21.640 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application MICRO-WEATHER-EUREKA-CLIENT-FEIGN with eureka with status UP
2019-08-09 21:35:21.640 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1565357721640, current=UP, previous=STARTING]
2019-08-09 21:35:21.640 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MICRO-WEATHER-EUREKA-CLIENT-FEIGN/localhost:micro-weather-eureka-client-feign:8884: registering service...
2019-08-09 21:35:21.656 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8884"]
2019-08-09 21:35:21.671 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8884 (http) with context path ''
2019-08-09 21:35:21.671 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MICRO-WEATHER-EUREKA-CLIENT-FEIGN/localhost:micro-weather-eureka-client-feign:8884 - registration status: 204
2019-08-09 21:35:21.671 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8884
2019-08-09 21:35:21.671 [main] INFO  com.example.gradleDemo.Application - Started Application in 7.076 seconds (JVM running for 7.679)
2019-08-09 21:35:59.448 [http-nio-8884-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-08-09 21:35:59.448 [http-nio-8884-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-08-09 21:35:59.454 [http-nio-8884-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2019-08-09 21:35:59.569 [http-nio-8884-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: micro-weather-city-eureka.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-08-09 21:35:59.586 [http-nio-8884-exec-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-micro-weather-city-eureka
2019-08-09 21:35:59.586 [http-nio-8884-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: micro-weather-city-eureka instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-weather-city-eureka,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-08-09 21:35:59.590 [http-nio-8884-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2019-08-09 21:35:59.604 [http-nio-8884-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: micro-weather-city-eureka.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-08-09 21:35:59.605 [http-nio-8884-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client micro-weather-city-eureka initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-weather-city-eureka,current list of Servers=[localhost:8883],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:8883;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@399a1731
2019-08-09 21:36:00.594 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: micro-weather-city-eureka.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-08-09 21:37:02.309 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e133a5ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-09 21:37:03.600 [main] INFO  com.example.gradleDemo.Application - The following profiles are active: feign
2019-08-09 21:37:03.959 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=2380844e-2825-3a92-a1d0-e9e0842dfa65
2019-08-09 21:37:03.959 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.example.gradleDemo.service.CityClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-09 21:37:04.006 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e133a5ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-09 21:37:04.131 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8884 (http)
2019-08-09 21:37:04.147 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8884"]
2019-08-09 21:37:04.147 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-08-09 21:37:04.147 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.21]
2019-08-09 21:37:04.240 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-08-09 21:37:04.240 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 624 ms
2019-08-09 21:37:04.397 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2019-08-09 21:37:04.397 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-09 21:37:04.397 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2019-08-09 21:37:04.397 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-09 21:37:04.490 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2019-08-09 21:37:05.866 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2019-08-09 21:37:07.068 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2019-08-09 21:37:07.146 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2019-08-09 21:37:07.177 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2019-08-09 21:37:07.301 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2019-08-09 21:37:07.301 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2019-08-09 21:37:07.376 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2019-08-09 21:37:07.376 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2019-08-09 21:37:07.486 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2019-08-09 21:37:07.611 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2019-08-09 21:37:07.611 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2019-08-09 21:37:07.611 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2019-08-09 21:37:07.611 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2019-08-09 21:37:07.611 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2019-08-09 21:37:07.611 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2019-08-09 21:37:07.611 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2019-08-09 21:37:07.718 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2019-08-09 21:37:07.720 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2019-08-09 21:37:07.721 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-08-09 21:37:07.724 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1565357827724 with initial instances count: 2
2019-08-09 21:37:07.725 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application MICRO-WEATHER-EUREKA-CLIENT-FEIGN with eureka with status UP
2019-08-09 21:37:07.725 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1565357827725, current=UP, previous=STARTING]
2019-08-09 21:37:07.726 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MICRO-WEATHER-EUREKA-CLIENT-FEIGN/localhost:micro-weather-eureka-client-feign:8884: registering service...
2019-08-09 21:37:07.734 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8884"]
2019-08-09 21:37:07.753 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8884 (http) with context path ''
2019-08-09 21:37:07.754 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8884
2019-08-09 21:37:07.756 [main] INFO  com.example.gradleDemo.Application - Started Application in 7.196 seconds (JVM running for 7.77)
2019-08-09 21:37:07.757 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MICRO-WEATHER-EUREKA-CLIENT-FEIGN/localhost:micro-weather-eureka-client-feign:8884 - registration status: 204
2019-08-09 21:38:19.828 [http-nio-8884-exec-4] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-08-09 21:38:19.828 [http-nio-8884-exec-4] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-08-09 21:38:19.832 [http-nio-8884-exec-4] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2019-08-09 21:38:19.948 [http-nio-8884-exec-4] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: micro-weather-city-eureka.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-08-09 21:38:19.968 [http-nio-8884-exec-4] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-micro-weather-city-eureka
2019-08-09 21:38:19.968 [http-nio-8884-exec-4] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: micro-weather-city-eureka instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-weather-city-eureka,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-08-09 21:38:19.973 [http-nio-8884-exec-4] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2019-08-09 21:38:19.989 [http-nio-8884-exec-4] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: micro-weather-city-eureka.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-08-09 21:38:19.990 [http-nio-8884-exec-4] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client micro-weather-city-eureka initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-weather-city-eureka,current list of Servers=[localhost:8883],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:8883;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@128b7eec
2019-08-09 21:38:20.975 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: micro-weather-city-eureka.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-08-09 21:39:40.349 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e133a5ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-09 21:39:41.615 [main] INFO  com.example.gradleDemo.Application - The following profiles are active: feign
2019-08-09 21:39:42.021 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=2380844e-2825-3a92-a1d0-e9e0842dfa65
2019-08-09 21:39:42.036 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.example.gradleDemo.service.CityClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-09 21:39:42.068 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e133a5ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-09 21:39:42.208 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8884 (http)
2019-08-09 21:39:42.224 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8884"]
2019-08-09 21:39:42.224 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-08-09 21:39:42.224 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.21]
2019-08-09 21:39:42.333 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-08-09 21:39:42.333 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 703 ms
2019-08-09 21:39:42.552 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2019-08-09 21:39:42.552 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-09 21:39:42.552 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2019-08-09 21:39:42.552 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-09 21:39:42.646 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2019-08-09 21:39:44.005 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2019-08-09 21:39:45.174 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2019-08-09 21:39:45.252 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2019-08-09 21:39:45.283 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2019-08-09 21:39:45.377 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2019-08-09 21:39:45.377 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2019-08-09 21:39:45.439 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2019-08-09 21:39:45.439 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2019-08-09 21:39:45.580 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2019-08-09 21:39:45.705 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2019-08-09 21:39:45.705 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2019-08-09 21:39:45.705 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2019-08-09 21:39:45.705 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2019-08-09 21:39:45.705 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2019-08-09 21:39:45.705 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2019-08-09 21:39:45.705 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2019-08-09 21:39:45.814 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2019-08-09 21:39:45.830 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2019-08-09 21:39:45.830 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-08-09 21:39:45.830 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1565357985830 with initial instances count: 2
2019-08-09 21:39:45.830 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application MICRO-WEATHER-EUREKA-CLIENT-FEIGN with eureka with status UP
2019-08-09 21:39:45.830 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1565357985830, current=UP, previous=STARTING]
2019-08-09 21:39:45.830 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MICRO-WEATHER-EUREKA-CLIENT-FEIGN/localhost:micro-weather-eureka-client-feign:8884: registering service...
2019-08-09 21:39:45.845 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8884"]
2019-08-09 21:39:45.877 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8884 (http) with context path ''
2019-08-09 21:39:45.877 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8884
2019-08-09 21:39:45.877 [main] INFO  com.example.gradleDemo.Application - Started Application in 7.215 seconds (JVM running for 7.784)
2019-08-09 21:39:45.877 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MICRO-WEATHER-EUREKA-CLIENT-FEIGN/localhost:micro-weather-eureka-client-feign:8884 - registration status: 204
2019-08-09 21:40:05.321 [http-nio-8884-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-08-09 21:40:05.321 [http-nio-8884-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-08-09 21:40:05.326 [http-nio-8884-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2019-08-09 21:40:05.438 [http-nio-8884-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: micro-weather-city-eureka.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-08-09 21:40:05.454 [http-nio-8884-exec-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-micro-weather-city-eureka
2019-08-09 21:40:05.455 [http-nio-8884-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: micro-weather-city-eureka instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-weather-city-eureka,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-08-09 21:40:05.458 [http-nio-8884-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2019-08-09 21:40:05.472 [http-nio-8884-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: micro-weather-city-eureka.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-08-09 21:40:05.472 [http-nio-8884-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client micro-weather-city-eureka initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-weather-city-eureka,current list of Servers=[localhost:8883],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:8883;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@550a3bc5
2019-08-09 21:40:05.596 [http-nio-8884-exec-1] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.FeignException: status 404 reading CityClient#listCity()] with root cause
feign.FeignException: status 404 reading CityClient#listCity()
	at feign.FeignException.errorStatus(FeignException.java:78)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:93)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:149)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:78)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy77.listCity(Unknown Source)
	at com.example.gradleDemo.controller.CityController.listCity(CityController.java:18)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-08-09 21:40:06.460 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: micro-weather-city-eureka.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-08-09 21:41:16.642 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$87091638] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-09 21:41:17.892 [main] INFO  com.example.gradleDemo.Application - The following profiles are active: feign
2019-08-09 21:41:18.251 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=2380844e-2825-3a92-a1d0-e9e0842dfa65
2019-08-09 21:41:18.251 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.example.gradleDemo.service.CityClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-09 21:41:18.282 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$87091638] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-08-09 21:41:18.423 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8884 (http)
2019-08-09 21:41:18.423 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8884"]
2019-08-09 21:41:18.423 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-08-09 21:41:18.423 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.21]
2019-08-09 21:41:18.517 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-08-09 21:41:18.517 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 610 ms
2019-08-09 21:41:18.673 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2019-08-09 21:41:18.673 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-09 21:41:18.673 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2019-08-09 21:41:18.673 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-08-09 21:41:18.767 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2019-08-09 21:41:20.126 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2019-08-09 21:41:21.282 [main] INFO  org.springframework.cloud.commons.util.InetUtils - Cannot determine local hostname
2019-08-09 21:41:21.344 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2019-08-09 21:41:21.360 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2019-08-09 21:41:21.453 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2019-08-09 21:41:21.453 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2019-08-09 21:41:21.516 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2019-08-09 21:41:21.516 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2019-08-09 21:41:21.610 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2019-08-09 21:41:21.719 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2019-08-09 21:41:21.719 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2019-08-09 21:41:21.719 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2019-08-09 21:41:21.719 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2019-08-09 21:41:21.719 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2019-08-09 21:41:21.719 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2019-08-09 21:41:21.719 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2019-08-09 21:41:21.828 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2019-08-09 21:41:21.828 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2019-08-09 21:41:21.828 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-08-09 21:41:21.828 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1565358081828 with initial instances count: 2
2019-08-09 21:41:21.828 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application MICRO-WEATHER-EUREKA-CLIENT-FEIGN with eureka with status UP
2019-08-09 21:41:21.828 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1565358081828, current=UP, previous=STARTING]
2019-08-09 21:41:21.828 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MICRO-WEATHER-EUREKA-CLIENT-FEIGN/localhost:micro-weather-eureka-client-feign:8884: registering service...
2019-08-09 21:41:21.844 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8884"]
2019-08-09 21:41:21.860 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MICRO-WEATHER-EUREKA-CLIENT-FEIGN/localhost:micro-weather-eureka-client-feign:8884 - registration status: 204
2019-08-09 21:41:21.860 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8884 (http) with context path ''
2019-08-09 21:41:21.860 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8884
2019-08-09 21:41:21.860 [main] INFO  com.example.gradleDemo.Application - Started Application in 6.936 seconds (JVM running for 7.487)
2019-08-09 21:41:52.664 [http-nio-8884-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-08-09 21:41:52.664 [http-nio-8884-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-08-09 21:41:52.668 [http-nio-8884-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2019-08-09 21:41:52.790 [http-nio-8884-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: micro-weather-city-eureka.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-08-09 21:41:52.808 [http-nio-8884-exec-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-micro-weather-city-eureka
2019-08-09 21:41:52.808 [http-nio-8884-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: micro-weather-city-eureka instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-weather-city-eureka,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-08-09 21:41:52.813 [http-nio-8884-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2019-08-09 21:41:52.828 [http-nio-8884-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: micro-weather-city-eureka.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-08-09 21:41:52.829 [http-nio-8884-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client micro-weather-city-eureka initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-weather-city-eureka,current list of Servers=[localhost:8883],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:8883;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@60bdd454
2019-08-09 21:41:53.815 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: micro-weather-city-eureka.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
